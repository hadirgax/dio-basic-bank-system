[project]
name = "basic-bank"
version = "0.1.0"
description = "A basica banking system emalator"
readme = "README.md"
requires-python = "==3.12"
authors = [{ name = "Hadir Garcia", email = "halexandergc@gmail.com" },]
dependencies = [
    "pydantic",
]

[project.optional-dependencies]
dev = [
    "black",
    "coverage",
    "isort",
    "mypy",
    "pre-commit",
    "pytest",
    "ruff",
    "watchfiles",
]

[tool.mypy]
check_untyped_defs = true
strict = true
exclude = ["venv", ".venv"]

[[tool.mypy.overrides]]
module = "basic-bank.*"
warn_unused_ignores = false
ignore_missing_imports = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_missing_imports = true
check_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_defs = false
disallow_untyped_calls = false

[tool.pytest.ini_options]
addopts = "-ra"
pythonpath = ["basic-bank", "scripts"]

[tool.coverage.run]
parallel = true
source = ["./basic-bank"]
data_file = "./.reports/coverage.xml"
context = '${CONTEXT}'
omit = ["./basic-bank/tests/*"]

[tool.coverage.paths]
source = ["basic-bank", "scripts"]

[tool.coverage.report]
show_missing = true

[tool.coverage.xml]
output = "./.reports/coverage.xml"

[tool.coverage.html]
output = "./.reports/htmlcov"

[tool.ruff]
target-version = "py312"
exclude = []
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B904",  # Allow raising exceptions without from e, for HTTPException
    "COM812", "ISC001" # Conflicts with the formatter
]

[tool.ruff.lint.isort]
known-local-folder = ["scripts"]
known-first-party = []
known-third-party = [
    "pydantic",
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.lint.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 5.
max-complexity = 5
